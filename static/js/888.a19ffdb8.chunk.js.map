{"version":3,"file":"static/js/888.a19ffdb8.chunk.js","mappings":"uLAIA,MAwBA,EAxBaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAM,WAAEE,EAAU,eAAEC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE5CC,GAAWC,EAAAA,EAAAA,cAAaC,GACrBL,EAAeK,IACrB,CAACL,IAEJ,OACEM,EAAAA,EAAAA,MAAA,OACEC,UAAW,SAAQT,EAAKU,SAAW,WAAa,IAChDC,cAAeA,IAAMN,EAASL,EAAKO,IAAIK,SAAA,EAEvCJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CACGZ,EAAKa,KAAM,KACZC,EAAAA,EAAAA,KAACC,EAAAA,IAAa,CACZC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,UAAWC,SAAU,SACpDC,QAASA,IAAMnB,EAAWD,EAAKO,UAGnCO,EAAAA,EAAAA,KAAA,KAAAF,SAAIZ,EAAKqB,QACL,ECAV,EApBcC,KACZ,MAAM,MAAEC,IAAUpB,EAAAA,EAAAA,YAAWC,EAAAA,GAEvBoB,GAAcC,EAAAA,EAAAA,UAAQ,IACnBF,EAAMG,MAAK,CAACC,EAAGC,IAAMD,EAAEN,IAAIQ,cAAcD,EAAEP,QACjD,CAACE,IAEJ,OACEf,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAlB,SAAA,EACIY,EAAYO,QAAU,oBACvBP,EAAYQ,KAAKhC,IAChBc,EAAAA,EAAAA,KAACmB,EAAI,CAEHjC,KAAMA,GADDA,EAAKO,QAIb,C","sources":["components/Task.js","components/Tasks.js"],"sourcesContent":["import React, { useContext, useCallback } from 'react';\r\nimport { FaRegTrashAlt } from 'react-icons/fa';\r\nimport TaskContext from '../context/TaskContext';\r\n\r\nconst Task = ({ task }) => {\r\n  const { deleteTask, toggleReminder } = useContext(TaskContext);\r\n\r\n  const onToggle = useCallback((id) => {\r\n    return toggleReminder(id);\r\n  }, [toggleReminder]);\r\n\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaRegTrashAlt\r\n          style={{ color: 'red', cursor: 'pointer', fontSize: '0.5em' }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext, useMemo } from 'react';\r\nimport TaskContext from '../context/TaskContext';\r\nimport Task from './Task';\r\n\r\nconst Tasks = () => {\r\n  const { tasks } = useContext(TaskContext);\r\n\r\n  const sortedTasks = useMemo(() => {\r\n    return tasks.sort((a, b) => a.day.localeCompare(b.day));\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <>\r\n      {!sortedTasks.length && 'No tasks to show.'}\r\n      {sortedTasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"names":["_ref","task","deleteTask","toggleReminder","useContext","TaskContext","onToggle","useCallback","id","_jsxs","className","reminder","onDoubleClick","children","text","_jsx","FaRegTrashAlt","style","color","cursor","fontSize","onClick","day","Tasks","tasks","sortedTasks","useMemo","sort","a","b","localeCompare","_Fragment","length","map","Task"],"sourceRoot":""}